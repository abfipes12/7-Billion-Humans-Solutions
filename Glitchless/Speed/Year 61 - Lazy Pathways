-- 7 Billion Humans (2145) --
-- 61: Lazy Pathways by @commonnickname --

step w
step w
mem1 = nearest datacube
jump a
mem2 = foreachdir w:
	mem4 = foreachdir s:
		a:
		jump b
	endfor
endfor
b:
if mem1 == 99 and
 mem2 == 99:
	pickup c
	if mem4 != wall:
		write 3
		drop
		pickup mem2
		jump c
		mem4 = foreachdir n:
			c:
			if mem4 == wall or
			 mem4 == worker:
				write 2
				drop
				step w
				step w
				step n
				jump d
				mem4 = foreachdir n:
					d:
					if mem4 == wall:
						step w
						step w
						pickup nw
						step nw
						write 2
						drop
						step w
						step w
						mem1 = nearest datacube
						if mem1 == 2:
							step w
							step w
						else:
							step sw
						endif
						step w
						pickup c
						write 6
						drop
						step w
						mem1 = set 7
					else:
						if mem4 == datacube:
							step nw
							step w
							step w
							step w
							step w
							step w
							step w
							step sw
							pickup c
							write 6
							drop
							step w
							pickup c
							write 7
							drop
							step se
							mem1 = set 7
						else:
							step sw
							pickup c
							write 2
							drop
							step e
							pickup c
							write 2
							drop
							step e
							step e
							step e
							pickup c
							write 3
							drop
							step sw
							step sw
							mem1 = set 4
						endif
					endif
				endfor
			else:
				write 3
				drop
				jump e
			endif
		endfor
	else:
		write 5
		drop
		step w
		step w
		pickup c
		write 5
		drop
		step nw
		pickup nw
		step nw
		jump f
	endif
else:
	step w
	if mem1 == 99 and
	 mem2 == 1:
		jump g
		mem4 = foreachdir n:
			g:
			if mem4 == wall:
				step w
				step w
				step w
				step w
				step w
				step w
				step w
				step sw
				step sw
				pickup c
				write 7
				drop
				step sw
				pickup c
				h:
				write 8
				drop
				pickup n
				step n
				jump h
			else:
				step s
				mem3 = nearest datacube
				step sw
				step w
				if mem3 == 2:
					e:
					step w
					step w
					pickup c
					f:
					write 3
					drop
					step s
					pickup c
					write 4
					drop
					step sw
					pickup c
					write 5
					drop
					step sw
					mem1 = set 6
				else:
					step w
					step w
					pickup c
					write 2
					drop
					step n
					step n
					pickup c
					write 2
					drop
					step n
					pickup nw
					write 3
					step nw
					drop
					step w
					pickup c
					write 4
					drop
					step w
					mem1 = set 5
				endif
			endif
		endfor
	else:
		step w
		step w
		step sw
		step sw
		step sw
		step w
		step w
		if mem2 == 2:
			pickup c
			if mem1 == 2:
				write 7
			else:
				write 6
			endif
			drop
			step w
			step nw
			step n
			step ne
			step e
			pickup c
			write 9
			drop
			pickup n
			step n
			if mem1 == 99:
				write 9
			else:
				write 8
			endif
			drop
			step w
			step w
			mem1 = set 8
		else:
			step w
			step w
			pickup c
			if mem1 == mem2:
				if mem1 == 3:
					write 9
					mem2 = set 10
				else:
					write 7
					mem2 = set 8
				endif
			else:
				write 8
				mem2 = set 9
			endif
			drop
			pickup nw
			step nw
			write mem2
			drop
			pickup n
			step n
			write mem2
			if mem2 == 8:
				mem2 = set 9
			endif
			drop
			pickup n
			step n
			write mem2
			drop
			step n
			mem1 = set 9
		endif
	endif
endif
pickup c
write mem1
drop